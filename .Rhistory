{yrelapse <- yrelapse[-i,]
i = i-1
}
}
}
View(yrelapse)
yrelapse <- HSCT_data[which(HSCT_data$relapse == 1),]
nrelapse <- HSCT_data[which(HSCT_data$relapse == 0),]
yrelapse <- yrelapse[,(38:84)]
nrelapse <- nrelapse[,(38:84)]
for(j in 1:47)
{ for(i in 1:length(yrelapse$ASXL1))
{ if(is.na(yrelapse[i,j]))
{yrelapse <- yrelapse[-i,]
i = i-1
}
}
}
for(j in 1:47)
{ for(i in 1:length(nrelapse$ASXL1))
{ if(is.na(nrelapse[i,j]))
{nrelapse <- nrelapse[-i,]
i = i-1
}
}
}
n1 <- dim(yrelapse)[1]
n2 <- dim(nrelapse)[1]
p <- dim(nrelapse)[2]
x.mean1 <- sapply(yrelapse, mean)
x.mean2 <- sapply(nrelapse, mean)
p.hat <- (x.mean1*n1+x.mean2*n2)/(n1+n2)
x.var <- (p.hat*(1-p.hat))
z.i <- (x.mean1-x.mean2)/sqrt(x.var*(1/n1+1/n2))
p.i <- ifelse(z.i<0, 2*pnorm(z.i),2*(1-pnorm(z.i)))
which(p.i<.01)
which(p.i<.05)
which(p.i<.1)
hist(MDS_data$ASXL1)
plot(MDS_data$ASXL1)
yrelapse <- yrelapse[,(38:84)]
nrelapse <- nrelapse[,(38:84)]
plot(yrelapse$ASXL1)
plot(nrelapse$ASXL1)
plot(yrelapse$TET2)
plot(nrelapse$TET2)
yrelapse <- yrelapse[,(38:84)]
nrelapse <- nrelapse[,(38:84)]
yrelapse <- HSCT_data[which(HSCT_data$relapse == 1),]
nrelapse <- HSCT_data[which(HSCT_data$relapse == 0),]
yrelapse <- yrelapse[,(38:84)]
nrelapse <- nrelapse[,(38:84)]
plot(yrelapse$ASXL1)
plot(nrelapse$ASXL1)
plot(yrelapse$TET2)
plot(nrelapse$TET2)
plot(yrelapse$ASXL1)
plot(nrelapse$ASXL1)
yrelapse <- HSCT_data[which(HSCT_data$relapse == 1),]
nrelapse <- HSCT_data[which(HSCT_data$relapse == 0),]
yrelapse <- yrelapse[,(36:84)]
nrelapse <- nrelapse[,(36:84)]
plot(yrelapse$n_mutations)
plot(nrelapse$n_mutations)
hist(yrelapse$n_mutations)
hist(nrelapse$n_mutations)
hist(yrelapse$n_mutgenes)
hist(nrelapse$n_mutgenes)
View(nrelapse)
for( i in 3:47)
{ plot(yrelapse[,i])
plot(nrelapse[,i])}
for( i in 3:47)
{ x11()
plot(yrelapse[,i])
plot(nrelapse[,i])}
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
plot(nrelapse[,i])}
graphics.off()
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
plot(nrelapse[,i])}
par(mfrow=c(2,2))
hist(yrelapse$n_mutations)
hist(nrelapse$n_mutations)
hist(yrelapse$n_mutgenes)
hist(nrelapse$n_mutgenes)
sapply(yrelapse$n_mutgenes, mean)
sapply(nrelapse$n_mutgenes, mean)
sapply(yrelapse$n_mutations, mean)
sapply(yrelapse$n_mutations, mean)
colMeans(yrelapse$n_mutgenes)
colMeans(nrelapse$n_mutgenes)
colMeans(yrelapse$n_mutations)
colMeans(nrelapse$n_mutations)
mean(yrelapse$n_mutgenes)
mean(nrelapse$n_mutgenes)
mean(yrelapse$n_mutations)
mean(nrelapse$n_mutations)
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
plot(nrelapse[,i])}
graphics.off()
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
plot(nrelapse[,i])}
graphics.off()
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(v = mean(nrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline(v = mean(nrelapse[,i]), col = 'red')}
graphics.off()
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(mean(nrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline( mean(nrelapse[,i]), col = 'red')}
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(h = mean(nrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline(h = mean(nrelapse[,i]), col = 'red')}
graphics.off()
for( i in 3:47)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(h = mean(yrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline(h = mean(nrelapse[,i]), col = 'red')}
graphics.off()
#plot
for( i in 3:48)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(h = mean(yrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline(h = mean(nrelapse[,i]), col = 'red')}
graphics.off()
#plot
for( i in 3:49)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(h = mean(yrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline(h = mean(nrelapse[,i]), col = 'red')}
graphics.off()
#plot
for( i in 3:50)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(h = mean(yrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline(h = mean(nrelapse[,i]), col = 'red')}
graphics.off()
colMeans(yrelapse)
colMeans(nrelapse)
hist(yrelapse$ASXL1)
#plot mutations
for( i in 3:49)
{ x11()
par(mfrow=c(1,2))
plot(yrelapse[,i])
abline(h = mean(yrelapse[,i]), col = 'red')
plot(nrelapse[,i])
abline(h = mean(nrelapse[,i]), col = 'red')}
graphics.off()
View(MDS_data)
View(HSCT_data)
load("~/.RData")
load("~/.Rhistory")
save.image("~/Università/4.2 Applied Statistics/WorkspaceLab.RData")
load("~/Università/4.2 Applied Statistics/WorkspaceLab.RData")
library(readr)
library(tidyverse)
library(roahd)
library(fdakmapp)
library(mgcv)
set.seed(2304)
df <-  read.table("Data/train.csv",header=TRUE,sep=",")
r_num <- c()
for( r in unique(df$R))
{
for( c in unique(df$C))
{
d <- df[which(df$R==r & df$C==c),'breath_id']
rn <- sample(unique(d), length(d)*0.00005, replace = F)
r_num <- c(r_num, rn )
}
}
train_s <- df %>%
filter(breath_id %in% r_num)
train_until1=data.frame()
for(i in seq(1,length(train_s$id),80) ){
t1=train_s[i:(i+29),]
train_until1 = rbind(train_until1, t1)
}
setwd("~/Università/5.1 Nonparametric statistics/Project/NPS_GoogleBrain")
df <-  read.table("Data/train.csv",header=TRUE,sep=",")
r_num <- c()
for( r in unique(df$R))
{
for( c in unique(df$C))
{
d <- df[which(df$R==r & df$C==c),'breath_id']
rn <- sample(unique(d), length(d)*0.00005, replace = F)
r_num <- c(r_num, rn )
}
}
train_s <- df %>%
filter(breath_id %in% r_num)
train_until1=data.frame()
for(i in seq(1,length(train_s$id),80) ){
t1=train_s[i:(i+29),]
train_until1 = rbind(train_until1, t1)
}
test <- df
for( i in r_num)
{
test <- test[which(test$breath_id != i), ]
}
r_num2 <- c()
for( r in unique(test$R))
{
for( c in unique(test$C))
{
d <- test[which(test$R==r & test$C==c),'breath_id']
rn2 <- sample(unique(d), length(d)*0.00005, replace = F)
r_num2 <- c(r_num2, rn2 )
}
}
test_s <- test %>%
filter(breath_id %in% r_num2)
test_until1 = data.frame()
for(i in seq(1,length(test_s$id),80) ){
t1=test_s[i:(i+29),]
test_until1 = rbind(test_until1, t1)
}
################
### R_c
################
train_until1$R_C <- paste(as.character(train_until1$R),as.character(train_until1$C), sep ="_")
X<-split(train_until1, train_until1$R_C)
id_X = names(X)
test_until1$R_C <- paste(as.character(test_until1$R),as.character(test_until1$C), sep ="_")
X<-split(test_until1, test_until1$R_C)
id_X = names(X)
################
### CUMULATIVE SUM OF u_in
################
train_until1$tot_u_in <- 0
for (i in unique(train_until1$breath_id)) {
train_until1[which(train_until1$breath_id==i), 'tot_u_in'] <- cumsum(train_until1[which(train_until1$breath_id==i),6])
}
test_until1$tot_u_in <- 0
for (i in unique(test_until1$breath_id)) {
test_until1[which(test_until1$breath_id==i), 'tot_u_in'] <- cumsum(test_until1[which(test_until1$breath_id==i),6])
}
################
### FIRST AND LAST VALUE OF u_in
################
train_until1$last_u_in <- 0
for( i in  unique(train_until1$breath_id))
{
x = train_until1[which(train_until1$breath_id==i), ]
l = dim(x)[1]
train_until1[which(train_until1$breath_id==i), 'last_u_in'] <- x[l,'u_in']
}
train_until1$first_u_in <- 0
for( i in unique(train_until1$breath_id))
{
x = train_until1[which(train_until1$breath_id==i), ]
train_until1[which(train_until1$breath_id==i), 'first_u_in'] <- x[1,'u_in']
}
test_until1$last_u_in <- 0
for( i in  unique(test_until1$breath_id))
{
x = test_until1[which(test_until1$breath_id==i), ]
l = dim(x)[1]
test_until1[which(test_until1$breath_id==i), 'last_u_in'] <- x[l,'u_in']
}
test_until1$first_u_in <- 0
for( i in unique(test_until1$breath_id))
{
x = test_until1[which(test_until1$breath_id==i), ]
test_until1[which(test_until1$breath_id==i), 'first_u_in'] <- x[1,'u_in']
}
###################
### MAX VALUE OF u_in FOR EACH BREATH
###################
train_until1$max_u_in <- 0
for (i in unique(train_until1$breath_id)) {
mx <- max(train_until1[which(train_until1$breath_id==i), 'u_in'])
train_until1[which(train_until1$breath_id==i), 'max_u_in'] <- mx
}
test_until1$max_u_in <- 0
for (i in unique(test_until1$breath_id)) {
mx <- max(test_until1[which(test_until1$breath_id==i), 'u_in'])
test_until1[which(test_until1$breath_id==i), 'max_u_in'] <- mx
}
#####################
### DIFFERENCE BETWEEN CONSECUTIVE VALUES
#####################
train_until1$u_in_diff1 <- 0
train_until1$u_in_diff2 <- 0
for (i in unique(train_until1$breath_id)) {
xx <- train_until1[which(train_until1$breath_id==i), 'u_in']
l <- length(xx)
shift <- c(0, 0, xx)
train_until1[which(train_until1$breath_id==i), 'u_in_diff1'] <- shift[3:(l+2)] - shift[2:(l+1)]
train_until1[which(train_until1$breath_id==i), 'u_in_diff2'] <- shift[3:(l+2)] - shift[1:l]
}
test_until1$u_in_diff1 <- 0
test_until1$u_in_diff2 <- 0
for (i in unique(test_until1$breath_id)) {
xx <- test_until1[which(test_until1$breath_id==i), 'u_in']
l <- length(xx)
shift <- c(0, 0, xx)
test_until1[which(test_until1$breath_id==i), 'u_in_diff1'] <- shift[3:(l+2)] - shift[2:(l+1)]
test_until1[which(test_until1$breath_id==i), 'u_in_diff2'] <- shift[3:(l+2)] - shift[1:l]
}
################
### DIFFERENCE BETWEEN CURRENT VALUE OF u_in AND THE MAX VALUE WITHIN THE BREATH
################
train_until1$u_in_diff_max <- 0
for (i in unique(train_until1$breath_id)) {
train_until1[which(train_until1$breath_id==i), 'u_in_diff_max'] <- train_until1[which(train_until1$breath_id==i), 'u_in'] - train_until1[which(train_until1$breath_id==i), 'max_u_in']
}
test_until1$u_in_diff_max <- 0
for (i in unique(test_until1$breath_id)) {
test_until1[which(test_until1$breath_id==i), 'u_in_diff_max'] <- test_until1[which(test_until1$breath_id==i), 'u_in'] - test_until1[which(test_until1$breath_id==i), 'max_u_in']
}
####################
### NUMBER OF CHANGE OF SIGN
####################
train_until1$n_change_sign_u_in <- 0
for (i in unique(train_until1$breath_id)) {
x <- train_until1[which(train_until1$breath_id==i), 'u_in_diff1']
signs <- sign(x)
ss <- sum(signs[-1] != signs[-length(x)])
train_until1[which(train_until1$breath_id==i), 'n_change_sign_u_in'] <- ss
}
test_until1$n_change_sign_u_in <- 0
for (i in unique(test_until1$breath_id)) {
x <- test_until1[which(test_until1$breath_id==i), 'u_in_diff1']
signs <- sign(x)
ss <- sum(signs[-1] != signs[-length(x)])
test_until1[which(test_until1$breath_id==i), 'n_change_sign_u_in'] <- ss
}
m <- gam(pressure ~ time_step + s(u_in) + R_C + tot_u_in + max_u_in + u_in_diff2 +
+ s(time_step, by = breath_id) + s(u_in, by = breath_id) +
+ s(tot_u_in, by = breath_id) +  s(last_u_in, by = breath_id) + s(first_u_in, by = breath_id) +
+ s(max_u_in, by = breath_id) + s(u_in_diff1, by = breath_id) + s(u_in_diff2, by = breath_id) +
+ s(u_in_diff_max, by = breath_id) + s(n_change_sign_u_in, by = breath_id) ,
family=gaussian, data=train_until1, method = "REML")
summary(m)
pr <- predict.gam(m, test_until1)
pr
ts = data.frame()
for(i in unique(train_until1$breath_id))
{
x1 = train_until1[which(train_until1$breath_id==i), ]
l = dim(x1)[1]
ts = rbind(ts, x1[l,])
}
ts_test = data.frame()
for(i in unique(test_until1$breath_id))
{
x1 = test_until1[which(test_until1$breath_id==i), ]
l = dim(x1)[1]
ts_test = rbind(ts_test, x1[l,])
}
func_data1=data.frame()
for(i in unique(test_s$breath_id)  ){
x1=test_s[which(test_s$breath_id==i),'time_step']
func_data1 = rbind(func_data1, t(x1))
}
#time
time_test = data.frame()
for(i in unique(test_s$breath_id)  ){
x1=test_s[which(test_s$breath_id==i),'time_step']
time_test = rbind(time_test, t(x1))
}
# true pressure
true_press_test = data.frame()
for(i in unique(test_s$breath_id) ){
x2=test_s[which(test_s$breath_id==i), 'pressure']
true_press_test = rbind(true_press_test, t(x2))
}
times = as.matrix(time_test)
true_press = as.matrix(true_press_test)
pred_press = as.matrix(pr)
x11()
matplot(t(times),t(true_press), type='l', xlab='time step', ylab='pressure')
lines(t(pred_press))
x11()
matplot(t(times),t(true_press), type='l', xlab='time step', ylab='pressure', col='black')
lines(t(pred_press), col='red')
x11()
matplot(t(times),t(true_press), type='l', xlab='time step', ylab='pressure', col='black')
lines(t(times), t(pred_press), col='red')
pr
pred_press_test = data.frame()
for(i in unique(test_until1$breath_id) ){
idx = which(test_until1$breath_id==i)
x3 = pr[idx]
pred_press_test = rbind(pred_press_test, t(x3))
}
idx = which(test_until1$breath_id==332)
idx = which(test_until1$breath_id==i)
idx
pr[idx]
x3 = pr[idx]
View(test_until1)
t(x3)
test_until1[which(test_until1$breath_id==332), 'pressure']
true_press_test = data.frame()
for(i in unique(test_until1$breath_id) ){
x2=test_until1[which(test_until1$breath_id==i), 'pressure']
true_press_test = rbind(true_press_test, t(x2))
}
time_test = data.frame()
for(i in unique(test_until1$breath_id)  ){
x1=test_until1[which(test_until1$breath_id==i),'time_step']
time_test = rbind(time_test, t(x1))
}
pr[idx,]
pred_press_test = data.frame()
for(i in unique(test_until1$breath_id) ){
idx = which(test_until1$breath_id==i)
x3 = pr[idx]
pred_press_test = rbind(pred_press_test, t(x3))
}
idx
pr[idx]
pr[[idx]]
pr[,idx]
x3
x3[]
x3[[]]
[[x3]]
unname(x3)
pred_press_test = data.frame()
for(i in unique(test_until1$breath_id) ){
idx = which(test_until1$breath_id==i)
x3 = pr[idx]
pred_press_test = rbind(pred_press_test, t(unname(x3)))
}
times = as.matrix(time_test)
true_press = as.matrix(true_press_test)
pred_press = as.matrix(pred_press_test)
x11()
matplot(t(times),t(true_press), type='l', xlab='time step', ylab='pressure', col='black')
lines( t(pred_press), col='red')
x11()
matplot(t(times),t(true_press), type='l', xlab='time step', ylab='pressure', col='black')
pomits( t(pred_press), col='red', type='l')
x11()
matplot(t(times),t(true_press), type='l', xlab='time step', ylab='pressure', col='black')
points( t(pred_press), col='red', type='l')
x11()
matplot(t(times),t(pred_press), type='l', xlab='time step', ylab='pressure', col='black')
t(times)
matplot(t(times)[,1],t(true_press)[,1], type='l', xlab='time step', ylab='pressure', col='black')
points( t(pred_press)[,1], col='red', type='l')
t(pred_press)
lines( t(pred_press)[,1], col='red')
matplor(t(times)[,1], t(pred_press)[,1], col='red')
matplot(t(times)[,1], t(pred_press)[,1], col='red')
matplot(t(times)[,1], t(pred_press)[,1],type='l', col='red')
matplot(t(times)[,1],t(true_press)[,1], type='l', xlab='time step', ylab='pressure', col='black')
x11()
par(mfrow=c(1,2))
matplot(t(times)[,1], t(true_press)[,1], type='l', xlab='time step', ylab='pressure', col='black')
matplot(t(times)[,1], t(pred_press)[,1], type='l', col='red')
x11()
par(mfrow=c(2,1))
matplot(t(times)[,1], t(true_press)[,1], type='l', xlab='time step', ylab='pressure', col='black')
matplot(t(times)[,1], t(pred_press)[,1], type='l', col='red')
x11()
par(mfrow=c(2,1))
matplot(t(times)[,1], t(true_press)[,1], type='l', xlab='time step', ylab='pressure', col='black')
matplot(t(times)[,1], t(pred_press)[,1], type='l', xlab='time step', ylab='pressure', col='red')
matplot(t(times)[,2], t(true_press)[,2], type='l', xlab='time step', ylab='pressure', col='black')
matplot(t(times)[,2], t(pred_press)[,2], type='l', xlab='time step', ylab='pressure', col='red')
matplot(t(times)[,3], t(true_press)[,3], type='l', xlab='time step', ylab='pressure', col='black')
matplot(t(times)[,3], t(pred_press)[,3], type='l', xlab='time step', ylab='pressure', col='red')
x11()
par(mfrow=c(2,1))
matplot(t(times)[,1:20], t(true_press)[,1:20], type='l', xlab='time step', ylab='pressure', col='black')
matplot(t(times)[,1:20], t(pred_press)[,1:20], type='l', xlab='time step', ylab='pressure', col='red')
matplot(t(times), t(true_press), type='l', xlab='time step', ylab='pressure', col='black')
matplot(t(times), t(pred_press), type='l', xlab='time step', ylab='pressure', col='red')
