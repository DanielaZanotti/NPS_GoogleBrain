cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
cl.e <- dist(c(ts$last_u_in, ts$tot_u_in), method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
cluster.ew <- cutree(cl.ew, k=3)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
c1 <- which(cluster.ew == 1)
c2 <- which(cluster.ew == 2)
cl.e <- dist(ts$last_u_in, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts$last_u_in, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
c1 <- which(cluster.ew == 1)
c2 <- which(cluster.ew == 2)
plot(ts[c1, 'last_u_in'])
### CLUSTER
plot(ts$last_u_in)
c1
plot(ts[c1, 'tot_u_in'])
cl.e <- dist(ts[c1, 'tot_u_in'], method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts[c1, 'tot_u_in'], col = cluster.ew)
plot(ts[c2, 'tot_u_in'])
cl.e <- dist(ts[c2, 'tot_u_in'], method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew2 <- cutree(cl.ew, k=2)
plot(ts[c2, 'tot_u_in'], col = cluster.ew2)
j = 1
for(i in c1 ){
idx = ts[i, 'id']
train_s[which(id==idx),'clust'] = cluster.ew[j]
j = j +1
}
j = 1
for(i in c2 ){
idx = ts[i, 'id']
train_s[which(id==idx),'clust'] = cluster.ew2[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
j = 1
for(i in c2 ){
idx = ts[i, 'id']
train_s[which(id==idx),'clust'] = cluster.ew2[j]+2
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
View(train_s)
cluster.ew2
cluster.ew2[j]+2
cluster.ew2[1]+2
j = 1
for(i in c2 ){
idx = ts[i, 'id']
train_s[which(id==idx),'clust'] = cluster.ew2[j]+2
j = j +1
}
j = 1
for(i in c1 ){
idx = ts[i, 'breath_id']
train_s[which(breath_id==idx),'clust'] = cluster.ew[j]
j = j +1
}
j = 1
for(i in c2 ){
idx = ts[i, 'breath_id']
train_s[which(breath_id==idx),'clust'] = cluster.ew2[j]+2
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
################
### CUMULATIVE SUM OF u_in
################
train$R_C <- paste(as.character(train$R),as.character(train$C), sep ="_")
################
### CUMULATIVE SUM OF u_in
################
train_s$R_C <- paste(as.character(train$R),as.character(train$C), sep ="_")
X<-split(train_s, train_s$R_C)
################
### CUMULATIVE SUM OF u_in
################
train_s$R_C <- paste(as.character(train_s$R),as.character(train_s$C), sep ="_")
X<-split(train_s, train_s$R_C)
id_X = names(X
)
### CLUSTER
plot(ts$first_u_in)
cl.e <- dist(ts$first_u_in, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts$first_u_in, col = cluster.ew)
cluster.ew <- cutree(cl.ew, k=3)
plot(ts$first_u_in, col = cluster.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts$first_u_in, col = cluster.ew)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
### CLUSTER
plot(ts$max_u_in)
cl.e <- dist(ts$max_u_in, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts$max_u_in, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
cl.e <- dist(ts$last_u_in, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts$last_u_in, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
c1 <- which(cluster.ew == 1)
c2 <- which(cluster.ew == 2)
plot(ts[c1, 'max_u_in'])
cl.e <- dist(ts[c1, 'max_u_in'], method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts[c1, 'max_u_in'], col = cluster.ew)
plot(ts[c2, 'max_u_in'])
cl.e <- dist(ts[c2, 'max_u_in'], method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew2 <- cutree(cl.ew, k=2)
plot(ts[c2, 'tot_u_in'], col = cluster.ew2)
j = 1
for(i in c1 ){
idx = ts[i, 'breath_id']
train_s[which(breath_id==idx),'clust'] = cluster.ew[j]
j = j +1
}
j = 1
for(i in c2 ){
idx = ts[i, 'breath_id']
train_s[which(breath_id==idx),'clust'] = cluster.ew2[j]+2
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
### CLUSTER
plot(ts$u_in_diff1)
cl.e <- dist(ts$u_in_diff1, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=3)
plot(ts$u_in_diff1, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
### CLUSTER
plot(ts$u_in_diff2)
cl.e <- dist(ts$u_in_diff2, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=3)
cluster.ew <- cutree(cl.ew, k=3)
plot(ts$u_in_diff1, col = cluster.ew)
plot(ts$u_in_diff2, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
### CLUSTER
plot(ts$u_in_diff_max)
cl.e <- dist(ts$u_in_diff_max, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=3)
rect.hclust(cl.ew, k=2)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts$u_in_diff_max, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
cluster.ew <- cutree(cl.ew, k=3)
plot(ts$u_in_diff_max, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
### CLUSTER
plot(ts$n_change_sign_u_in)
cl.e <- dist(ts$n_change_sign_u_in, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
train_s$n_change_sign_u_in <- 0
for (i in unique(train_s$breath_id)) {
x <- train_s[which(breath_id==i), 12]
signs <- sign(x)
ss <- sum(signs[-1] != signs[-length(x)])
train_s[which(breath_id==i), 'n_change_sign_u_in'] <- ss
}
for (i in unique(train_s$breath_id)) {
x <- train_s[which(breath_id==i), 6]
signs <- sign(x)
ss <- sum(signs[-1] != signs[-length(x)])
train_s[which(breath_id==i), 'n_change_sign_u_in'] <- ss
}
### CLUSTER
plot(ts$n_change_sign_u_in)
ts = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x1 = train_s[i+79,]
ts = rbind(ts, x1)
}
### CLUSTER
plot(ts$n_change_sign_u_in)
cl.e <- dist(ts$n_change_sign_u_in, method='euclidean')
cl.ew <- hclust(cl.e, method='ward')
plot(cl.ew, main='euclidean-ward', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
rect.hclust(cl.ew, k=3)
cluster.ew <- cutree(cl.ew, k=2)
plot(ts$n_change_sign_u_in, col = cluster.ew)
coph <- cophenetic(cl.ew)
cor(coph, cl.e)
j = 1
for(i in seq(1,length(train_s$id),80) ){
train_s[i:(i+79),'clust'] = cluster.ew[j]
j = j +1
}
func_data5 = data.frame()
for(i in seq(1,length(train_s$id),80) ){
x5 = train_s[i:(i+79),'clust']
func_data5 = rbind(func_data5, t(x5))
}
clu = as.matrix(func_data5)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= clu)
matplot(t(times),t(uin), type='l', xlab='x', ylab='orig.func', col= clu)
### CLUSTER
plot(ts$R_C)
x11()
matplot(t(times),t(pr), type='l', xlab='x', ylab='orig.func', col= train_s$R_C)
time <- 1:80
basis <- create.bspline.basis(rangeval=c(1,24), nbasis=nbasis, norder=4)
library(MASS) #qda
library(car) #vif
library(glmnet) #lasso
library(fda)
library(KernSmooth) #fda - smoothing
library(fdakma) #kmean alignment
library(heplots) #boxM
library(class) #knn
basis <- create.bspline.basis(rangeval=c(1,24), nbasis=nbasis, norder=4)
nbasis <- 15
basis <- create.bspline.basis(rangeval=c(1,24), nbasis=nbasis, norder=4)
data_W.fd.1 <- Data2fd(y = train_s,argvals = time,basisobj = basis)
data_W.fd.1 <- Data2fd(y = train_s$u_in,argvals = time,basisobj = basis)
data_W.fd.1 <- Data2fd(y = t(train_s$u_in),argvals = time,basisobj = basis)
data_W.fd.1 <- Data2fd(y = uin ,argvals = time,basisobj = basis)
pc.weather <- princomp(ts[:,9:18], scores=T)
pc.weather <- princomp(ts[,9:18], scores=T)
pc.weather <- princomp(ts[,9:16], scores=T)
pc.weather
summary(pc.weather)
load.wea <- pc.weather$loadings
load.wea
pc <- princomp(ts[,9:16], scores=T)
pc
summary(pc)
load.wea <- pc$loadings
load.wea
load <- pc$loadings
x11()
par(mfcol = c(3,1))
for(i in 1:3) barplot(load[,i], ylim = c(-1, 1), main=paste("PC",i))
x11()
layout(matrix(c(2,3,1,3),2,byrow=T))
plot(pc, las=2, main='Principal components', ylim=c(0,4.5e2))
barplot(sapply(ts[,9:16],sd)^2, las=2, main='Original Variables', ylim=c(0,4.5e2), ylab='Variances')
plot(cumsum(pc$sd^2)/sum(pc$sd^2), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.8, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:ncol(ts[,9:16]),labels=1:ncol(ts[,9:16]),las=2)
x11()
layout(matrix(c(2,3,1,3),2,byrow=T))
plot(pc, las=2, main='Principal components', ylim=c(0,4.5e4))
barplot(sapply(ts[,9:16],sd)^2, las=2, main='Original Variables', ylim=c(0,4.5e4), ylab='Variances')
plot(cumsum(pc$sd^2)/sum(pc$sd^2), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.8, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:ncol(ts[,9:16]),labels=1:ncol(ts[,9:16]),las=2)
scores.wea <- pc$scores
scores.wea
