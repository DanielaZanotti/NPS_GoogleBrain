xlab = 'pred', ylab = 'res', main = 'GAM term residuals versus predictions')
res_re <- lapply(mods, function(x) data.frame(res_re = residuals(x$mer), pred = predict(x$mer)))
mod_re <- rep(names(mods), unlist(lapply(res_re, nrow)))
res_re <- do.call("rbind", res_re)
res_re$mod <- mod_re
x11()
par(mfrow=c(2,2))
hist(res_re[which(res_re$mod=='m1'), 'res_re'], xlab = 'Residuals', main = 'Model 1')
hist(res_re[which(res_re$mod=='m2'), 'res_re'], xlab = 'Residuals', main = 'Model 2')
hist(res_re[which(res_re$mod=='m3'), 'res_re'], xlab = 'Residuals', main = 'Model 3')
hist(res_re[which(res_re$mod=='m4'), 'res_re'], xlab = 'Residuals', main = 'Model 4')
x11()
par(mfrow=c(2,2))
qqnorm(res_re[which(res_re$mod=='m1'), 'res_re'], main = 'Model 1')
qqline(res_re[which(res_re$mod=='m1'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m2'), 'res_re'], main = 'Model 2')
qqline(res_re[which(res_re$mod=='m2'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m3'), 'res_re'], main = 'Model 3')
qqline(res_re[which(res_re$mod=='m3'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m4'), 'res_re'], main = 'Model 4')
qqline(res_re[which(res_re$mod=='m4'), 'res_re'], col='blue')
x11()
par(mfrow=c(2,2))
plot(res[which(res$mod=='m3'), 'pred'], res[which(res$mod=='m1'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 1')
plot(res[which(res$mod=='m3'), 'pred'], res[which(res$mod=='m2'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 2')
plot(res[which(res$mod=='m3'), 'pred'], res[which(res$mod=='m3'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 3')
plot(res[which(res$mod=='m4'), 'pred'], res[which(res$mod=='m4'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 4')
aic <- AIC(m1$mer, m2$mer, m3$mer, m4$mer)
aic$BIC <- BIC(m1$mer, m2$mer, m3$mer, m4$mer)$BIC
kable(aic[order(aic$BIC), ])
#u_in
func_data1=data.frame()
for(i in seq(1,length(train_s$id),80) ){
x1=train_s[i:(i+79),6]
func_data1 = rbind(func_data1, t(x1))
}
grid <-  seq( 1, 80)
f_data1 <- fData(grid,func_data1)
#u_out
func_data2=data.frame()
for(i in seq(1,length(train_s$id),80) ){
x2=train_s[i:(i+79),7]
func_data2 = rbind(func_data2, t(x2))
}
grid <-  seq( 1, 80)
f_data2 <- fData(grid,func_data2)
#pressure
func_data3=data.frame()
for(i in seq(1,length(train_s$id),80) ){
x3=train_s[i:(i+79),8]
func_data3 = rbind(func_data3, t(x3))
}
grid <-  seq( 1, 80)
f_data3 <- fData(grid,func_data3)
x11()
par(mfcol = c(1,3))
plot(f_data1,main="in")
plot(f_data2,main="out")
plot(f_data3,main="pressure")
#timestep
times=data.frame()
for(i in seq(1,length(train_s$id),80) ){
tim=train_s[i:(i+79),5]
times = rbind(times, t(tim))
}
n=200
k=203
x11()
par(mfrow = c(k-n+1,3))
for (j in seq(n,k,1)){
f1 <- fData(grid,func_data1[j,])
f2 <- fData(grid,func_data2[j,])
f3 <- fData(grid,func_data3[j,])
plot(f1,main="in")
plot(f2,main="out")
plot(f3,main="pressure")
}
ts_train = data.frame()
for(i in unique(train_until1$breath_id))
{
x1 = train_until1[which(train_until1$breath_id==i), ]
l = dim(x1)[1]
ts_train = rbind(ts_train, x1[l,])
}
ts_test = data.frame()
for(i in unique(test_until1$breath_id))
{
x1 = test_until1[which(test_until1$breath_id==i), ]
l = dim(x1)[1]
ts_test = rbind(ts_test, x1[l,])
}
x11()
pairs(ts[10:17])
pairs(ts_train[10:17])
x11()
pairs(ts_train[10:17])
summary(m1$mer) ## underlying mixed model
summary(m1$gam) ## summary of gam
mmm <- gamm4(pressure ~ time_step + s(u_in) + (tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(area) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(m1$gam) ## summary of gam
summary(mmm$gam) ## summary of gam
plot(m1$gam)
summary(m2$gam) ## summary of gam
summary(m2$mer) ## underlying mixed model
#gamm with random intercept by clust
m2 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(area) +
+ factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| clust))
summary(m2$gam) ## summary of gam
summary(m2$mer) ## underlying mixed model
#### AIC and BIC of random effects term
aic <- AIC(m1$mer, m2$mer, m3$mer, m4$mer)
aic$BIC <- BIC(m1$mer, m2$mer, m3$mer, m4$mer)$BIC
kable(aic[order(aic$BIC), ])
summary(m3$gam) ## summary of gam
summary(m4$gam) ## summary of gam
#gamm with random intercept by breath_id & clust
m3 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(area) +
+ factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust) )
train_until1$u_in_diff1 <- 0
train_until1$u_in_diff2 <- 0
train_until1$u_in_diff3 <- 0
for (i in unique(train_until1$breath_id)) {
xx <- train_until1[which(train_until1$breath_id==i), 'u_in']
l <- length(xx)
shift <- c(0, 0, 0, xx)
train_until1[which(train_until1$breath_id==i), 'u_in_diff1'] <- shift[4:(l+3)] - shift[3:(l+2)]
train_until1[which(train_until1$breath_id==i), 'u_in_diff2'] <- shift[4:(l+3)] - shift[2:(l+1)]
train_until1[which(train_until1$breath_id==i), 'u_in_diff2'] <- shift[4:(l+3)] - shift[1:l]
}
train_until1$u_in_diff1 <- 0
train_until1$u_in_diff2 <- 0
train_until1$u_in_diff3 <- 0
for (i in unique(train_until1$breath_id)) {
xx <- train_until1[which(train_until1$breath_id==i), 'u_in']
l <- length(xx)
shift <- c(0, 0, 0, xx)
train_until1[which(train_until1$breath_id==i), 'u_in_diff1'] <- shift[4:(l+3)] - shift[3:(l+2)]
train_until1[which(train_until1$breath_id==i), 'u_in_diff2'] <- shift[4:(l+3)] - shift[2:(l+1)]
train_until1[which(train_until1$breath_id==i), 'u_in_diff3'] <- shift[4:(l+3)] - shift[1:l]
}
test_until1$u_in_diff1 <- 0
test_until1$u_in_diff2 <- 0
test_until1$u_in_diff3 <- 0
for (i in unique(test_until1$breath_id)) {
xx <- test_until1[which(test_until1$breath_id==i), 'u_in']
l <- length(xx)
shift <- c(0, 0, xx)
test_until1[which(test_until1$breath_id==i), 'u_in_diff1'] <- shift[4:(l+3)] - shift[3:(l+2)]
test_until1[which(test_until1$breath_id==i), 'u_in_diff2'] <- shift[4:(l+3)] - shift[2:(l+1)]
test_until1[which(test_until1$breath_id==i), 'u_in_diff3'] <- shift[4:(l+3)] - shift[1:l]
}
View(test_until1)
test_until1$u_in_diff1 <- 0
test_until1$u_in_diff2 <- 0
test_until1$u_in_diff3 <- 0
for (i in unique(test_until1$breath_id)) {
xx <- test_until1[which(test_until1$breath_id==i), 'u_in']
l <- length(xx)
shift <- c(0, 0, 0, xx)
test_until1[which(test_until1$breath_id==i), 'u_in_diff1'] <- shift[4:(l+3)] - shift[3:(l+2)]
test_until1[which(test_until1$breath_id==i), 'u_in_diff2'] <- shift[4:(l+3)] - shift[2:(l+1)]
test_until1[which(test_until1$breath_id==i), 'u_in_diff3'] <- shift[4:(l+3)] - shift[1:l]
}
summary(m1$gam) ## summary of gam
summary(m1$mer) ## underlying mixed model
#gamm with random intercept by breath_id
m1 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3)+ s(area) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
x11()
par(mfrow=c(2,2))
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m1'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 1')
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m2'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 2')
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m3'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 3')
plot(res_re[which(res_re$mod=='m4'), 'pred'], res_re[which(res_re$mod=='m4'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 4')
summary(m2$gam) ## summary of gam
summary(m1$gam) ## summary of gam
summary(m1$mer) ## underlying mixed model
#gamm with random intercept by clust
m2 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(area) +
+ factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| clust))
summary(m2$gam) ## summary of gam
summary(m2$mer) ## underlying mixed model
#gamm with random intercept by breath_id & clust
m3 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(area) +
+ factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust) )
summary(m3$gam) ## summary of gam
summary(m3$mer) ## underlying mixed model
#gamm with random intercept by breath_id & clust
m3 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + # s(area) +
+ factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust) )
summary(m3$gam) ## summary of gam
summary(m3$mer) ## underlying mixed model
summary(m1$gam) ## summary of gam
#gamm with random intercept by breath_id
m1 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(m1$gam) ## summary of gam
summary(m1$mer) ## underlying mixed model
summary(m2$gam) ## summary of gam
summary(m4$gam) ## summary of gam
summary(m4$mer) ## underlying mixed model
mods <- list(m1, m2, m3, m4)
names(mods) <- c("m1", "m2", "m3", "m4")
res <- lapply(mods, function(x) data.frame(res = residuals(x$gam), pred = predict(x$gam)))
mod <- rep(names(mods), unlist(lapply(res, nrow)))
res <- do.call("rbind", res)
res$mod <- mod
x11()
par(mfrow=c(2,2))
hist(res[which(res$mod=='m1'), 'res'], xlab = 'Residuals', main = 'Model 1')
hist(res[which(res$mod=='m2'), 'res'], xlab = 'Residuals', main = 'Model 2')
hist(res[which(res$mod=='m3'), 'res'], xlab = 'Residuals', main = 'Model 3')
hist(res[which(res$mod=='m4'), 'res'], xlab = 'Residuals', main = 'Model 4')
x11()
par(mfrow=c(2,2))
qqnorm(res[which(res$mod=='m1'), 'res'], main = 'Model 1')
qqline(res[which(res$mod=='m1'), 'res'], col='blue')
qqnorm(res[which(res$mod=='m2'), 'res'], main = 'Model 2')
qqline(res[which(res$mod=='m2'), 'res'], col='blue')
qqnorm(res[which(res$mod=='m3'), 'res'], main = 'Model 3')
qqline(res[which(res$mod=='m3'), 'res'], col='blue')
qqnorm(res[which(res$mod=='m4'), 'res'], main = 'Model 4')
qqline(res[which(res$mod=='m4'), 'res'], col='blue')
#GAM term residuals versus predictions
x11()
par(mfrow=c(2,2))
plot(res[which(res$mod=='m1'), 'pred'], res[which(res$mod=='m1'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 1')
plot(res[which(res$mod=='m3'), 'pred'], res[which(res$mod=='m2'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 2')
plot(res[which(res$mod=='m3'), 'pred'], res[which(res$mod=='m3'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 3')
plot(res[which(res$mod=='m4'), 'pred'], res[which(res$mod=='m4'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 4')
res_re <- lapply(mods, function(x) data.frame(res_re = residuals(x$mer), pred = predict(x$mer)))
mod_re <- rep(names(mods), unlist(lapply(res_re, nrow)))
res_re <- do.call("rbind", res_re)
res_re$mod <- mod_re
x11()
par(mfrow=c(2,2))
hist(res_re[which(res_re$mod=='m1'), 'res_re'], xlab = 'Residuals', main = 'Model 1')
hist(res_re[which(res_re$mod=='m2'), 'res_re'], xlab = 'Residuals', main = 'Model 2')
hist(res_re[which(res_re$mod=='m3'), 'res_re'], xlab = 'Residuals', main = 'Model 3')
hist(res_re[which(res_re$mod=='m4'), 'res_re'], xlab = 'Residuals', main = 'Model 4')
#Random effect residuals quantile plot by model
x11()
par(mfrow=c(2,2))
qqnorm(res_re[which(res_re$mod=='m1'), 'res_re'], main = 'Model 1')
qqline(res_re[which(res_re$mod=='m1'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m2'), 'res_re'], main = 'Model 2')
qqline(res_re[which(res_re$mod=='m2'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m3'), 'res_re'], main = 'Model 3')
qqline(res_re[which(res_re$mod=='m3'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m4'), 'res_re'], main = 'Model 4')
qqline(res_re[which(res_re$mod=='m4'), 'res_re'], col='blue')
x11()
par(mfrow=c(2,2))
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m1'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 1')
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m2'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 2')
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m3'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 3')
plot(res_re[which(res_re$mod=='m4'), 'pred'], res_re[which(res_re$mod=='m4'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 4')
aic <- AIC(m1$mer, m2$mer, m3$mer, m4$mer)
aic$BIC <- BIC(m1$mer, m2$mer, m3$mer, m4$mer)$BIC
kable(aic[order(aic$BIC), ])
plot(m1$gam)
mod <- rep(names(mods), unlist(lapply(res, nrow)))
plot(m1$gam)
#GAM shapiro tests
shapiro.test(res[which(res$mod=='m1'), 'res'])
mods <- list(m1, m2, m3, m4)
names(mods) <- c("m1", "m2", "m3", "m4")
#GAM shapiro tests
shapiro.test(res[which(res$mod=='m1'), 'res'])
res[which(res$mod=='m1'), 'res']
shapiro.test((m1$gam)$residuals)
#gamm with random intercept by breath_id & clust  & clust pearson
m5 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(area) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust) + (1| clust_pearson) )
mods <- list(m1, m2, m3, m4)
names(mods) <- c("m1", "m2", "m3", "m4")
res <- lapply(mods, function(x) data.frame(res = residuals(x$gam), pred = predict(x$gam)))
mod <- rep(names(mods), unlist(lapply(res, nrow)))
res <- do.call("rbind", res)
res$mod <- mod
x11()
par(mfrow=c(2,2))
hist(res[which(res$mod=='m1'), 'res'], xlab = 'Residuals', main = 'Model 1')
hist(res[which(res$mod=='m2'), 'res'], xlab = 'Residuals', main = 'Model 2')
hist(res[which(res$mod=='m3'), 'res'], xlab = 'Residuals', main = 'Model 3')
hist(res[which(res$mod=='m4'), 'res'], xlab = 'Residuals', main = 'Model 4')
x11()
par(mfrow=c(2,2))
qqnorm(res[which(res$mod=='m1'), 'res'], main = 'Model 1')
qqline(res[which(res$mod=='m1'), 'res'], col='blue')
qqnorm(res[which(res$mod=='m2'), 'res'], main = 'Model 2')
qqline(res[which(res$mod=='m2'), 'res'], col='blue')
qqnorm(res[which(res$mod=='m3'), 'res'], main = 'Model 3')
qqline(res[which(res$mod=='m3'), 'res'], col='blue')
qqnorm(res[which(res$mod=='m4'), 'res'], main = 'Model 4')
qqline(res[which(res$mod=='m4'), 'res'], col='blue')
#GAM term residuals versus predictions
x11()
par(mfrow=c(2,2))
plot(res[which(res$mod=='m1'), 'pred'], res[which(res$mod=='m1'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 1')
plot(res[which(res$mod=='m3'), 'pred'], res[which(res$mod=='m2'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 2')
plot(res[which(res$mod=='m3'), 'pred'], res[which(res$mod=='m3'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 3')
plot(res[which(res$mod=='m4'), 'pred'], res[which(res$mod=='m4'), 'res'],
xlab = 'prediction', ylab = 'res', main = 'Model 4')
res_re <- lapply(mods, function(x) data.frame(res_re = residuals(x$mer), pred = predict(x$mer)))
mod_re <- rep(names(mods), unlist(lapply(res_re, nrow)))
res_re <- do.call("rbind", res_re)
res_re$mod <- mod_re
x11()
par(mfrow=c(2,2))
hist(res_re[which(res_re$mod=='m1'), 'res_re'], xlab = 'Residuals', main = 'Model 1')
hist(res_re[which(res_re$mod=='m2'), 'res_re'], xlab = 'Residuals', main = 'Model 2')
hist(res_re[which(res_re$mod=='m3'), 'res_re'], xlab = 'Residuals', main = 'Model 3')
hist(res_re[which(res_re$mod=='m4'), 'res_re'], xlab = 'Residuals', main = 'Model 4')
x11()
par(mfrow=c(2,2))
qqnorm(res_re[which(res_re$mod=='m1'), 'res_re'], main = 'Model 1')
qqline(res_re[which(res_re$mod=='m1'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m2'), 'res_re'], main = 'Model 2')
qqline(res_re[which(res_re$mod=='m2'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m3'), 'res_re'], main = 'Model 3')
qqline(res_re[which(res_re$mod=='m3'), 'res_re'], col='blue')
qqnorm(res_re[which(res_re$mod=='m4'), 'res_re'], main = 'Model 4')
qqline(res_re[which(res_re$mod=='m4'), 'res_re'], col='blue')
x11()
par(mfrow=c(2,2))
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m1'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 1')
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m2'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 2')
plot(res_re[which(res_re$mod=='m3'), 'pred'], res_re[which(res_re$mod=='m3'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 3')
plot(res_re[which(res_re$mod=='m4'), 'pred'], res_re[which(res_re$mod=='m4'), 'res_re'],
xlab = 'prediction', ylab = 'res', main = 'Model 4')
aic <- AIC(m1$mer, m2$mer, m3$mer, m4$mer)
aic$BIC <- BIC(m1$mer, m2$mer, m3$mer, m4$mer)$BIC
kable(aic[order(aic$BIC), ])
View(train_until1)
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ last_u_in + first_u_in + max_u_in + n_change_sign +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ last_u_in + first_u_in + max_u_in + n_change_sign_u_in +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(mmm$gam) ## summary of gam
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ s(last_u_in) + #first_u_in + max_u_in + n_change_sign_u_in +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(mmm$gam) ## summary of gam
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ s(first_u_in) + # max_u_in + n_change_sign_u_in +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(mmm$gam) ## summary of gam
summary(mmm$mer) ## underlying mixed model
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ s(first_u_in) + s(max_u_in) + #n_change_sign_u_in +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(mmm$gam) ## summary of gam
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ s(first_u_in) + s(n_change_sign_u_in) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(mmm$gam) ## summary of gam
summary(mmm$mer) ## underlying mixed model
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + #s(area) +
+ s(n_change_sign_u_in) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(mmm$gam) ## summary of gam
summary(mmm$mer) ## underlying mixed model
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + s(area) +
+ s(n_change_sign_u_in) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(mmm$gam) ## summary of gam
#gamm with random intercept by breath_id
m1 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + s(n_change_sign_u_in) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
summary(m1$gam) ## summary of gam
summary(m1$mer) ## underlying mixed model
#gamm with random intercept by clust
m2 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3)
+ s(area) + s(n_change_sign_u_in) +
+ factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| clust))
summary(m2$gam) ## summary of gam
summary(m2$mer) ## underlying mixed model
#gamm with random intercept by breath_id & clust
m3 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(n_change_sign_u_in) +
+ factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust) )
summary(m3$gam) ## summary of gam
summary(m3$mer) ## underlying mixed model
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3)+
+ s(area) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
summary(m4$gam) ## summary of gam
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3)+
+ s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3)+
+ s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3)+
+ s(area) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3)+
#+ s(area) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
summary(m4$gam) ## summary of gam
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
#gamm with random intercept by breath_id & clust pearson
m44 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
# salvare i dati, e caricarli senza dover ogni volta caricare tutto il datset
write.table(train_until1, file="trainset.csv", quote=T, sep=",", dec=".", na="NA", row.names=F, col.names=T)
write.table(test_until1, file="testset.csv", quote=T, sep=",", dec=".", na="NA", row.names=F, col.names=T)
mmm <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) + s(u_in_diff2) + s(u_in_diff3) + s(n_change_sign_u_in) +
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id))
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(area) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
#gamm with random intercept by breath_id & clust pearson
m4 <- gamm4(pressure ~ time_step + s(u_in) + s(tot_u_in) + s(u_in_diff1) +s(u_in_diff2) + s(u_in_diff3) + s(n_change_sign_u_in)+
+ factor(clust) + factor(R_C == '20_20') + factor(R_C == '20_50') + factor(R_C == '5_20') + factor(R_C == '5_50'),
data=train_until1,
random = ~ (1| breath_id) + (1| clust_pearson) )
